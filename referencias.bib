@techreport{mohorovic,
abstract = {This paper researches different computer programming teaching methods in courses in higher education. Computer programming is among the most challenging subjects in computer science curriculum, and the one that many students find difficult to grasp, hence it is very important to select an appropriate teaching strategy that will provide students with the most efficient learning environment. The paper gives an overview and comparison of some of the existing teaching methods and addresses the benefits and problems associated with their application.},
author = {Mohorovi{\v{c}}i{\'{c}}, Sanja and Str{\v{c}}i{\'{c}}, Vedran},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Mohorovi{\v{c}}i{\'{c}}, Str{\v{c}}i{\'{c}} - Unknown - An Overview of Computer Programming Teaching Methods(2).pdf:pdf},
keywords = {computer programming,teaching methods,teaching strategy},
title = {{An Overview of Computer Programming Teaching Methods}}
}
@article{Szlavi2003,
abstract = {Programming methodology is one of the oldest fields of IS education, and thus various methods have evolved for its teaching. While some of them could be used effectively in primary or secondary education, others are more suited for students in higher education. The methods themselves determine the structure and curricula of courses such as Programming methodology, Data types and algorithms, Programming technology. Teaching programming is virtually as old as information technology itself. In the beginning, (before 1950) it meant the understanding of how computers worked and how they could be used. In this and the following era programming was an "artistic" activity, programmers had to learn different tricks and gimmicks, and furthermore they had to find out new algorithms for each problem. The knowledge of programming was spread by word of mouth even in the 1950s. They used programming languages which were based on the machine, thus they were forced to spend more time working out the details than focusing on the essence of the problem. Meanwhile, they had to realize that the computers were slow and did not have enough memory capacity. It became really important to teach programming after programming languages of higher level had appeared. On the influence of the previous era, however , it was based on teaching one particular programming language. The exercises were to understand the instructions of the programming language and to},
author = {Szl{\'{a}}vi, P{\'{e}}ter and Zsak{\'{o}}, L{\'{a}}szl{\'{o}}},
doi = {10.5485/tmcs.2003.0023},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Szl{\'{a}}vi, Zsak{\'{o}} - 2003 - Methods of teaching programming.pdf:pdf},
issn = {15897389},
journal = {Teaching Mathematics and Computer Science},
number = {2},
pages = {247--257},
publisher = {University of Debrecen/ Debreceni Egyetem},
title = {{Methods of teaching programming}},
volume = {1},
year = {2003}
}
@techreport{Robins2003,
abstract = {In this paper we review the literature relating to the psychological/educational study of programming. We identify general trends comparing novice and expert programmers, programming knowledge and strategies, program generation and comprehension, and object-oriented versus procedural programming. (We do not cover research relating specifically to other programming styles.) The main focus of the review is on novice programming and topics relating to novice teaching and learning. Various problems experienced by novices are identified, including issues relating to basic program design, to algorithmic complexity in certain language features, to the “fragility” of novice knowledge, and so on. We summarise this material and suggest some practical implications for teachers. We suggest that a key issue that emerges is the distinction between effective and ineffective novices. What characterises effective novices? Is it possible to identify the specific deficits of ineffective novices and help them to become effective learners of programming?. {\textcopyright} 2003, Taylor {\&} Francis Group, LLC.},
author = {Robins, Anthony and Rountree, Janet and Rountree, Nathan},
booktitle = {International Journal of Phytoremediation},
doi = {10.1076/csed.13.2.137.14200},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Robins, Rountree, Rountree - 2003 - Learning and Teaching Programming A Review and Discussion.pdf:pdf},
issn = {15497879},
number = {1},
pages = {137--172},
title = {{Learning and teaching programming: A review and discussion}},
volume = {21},
year = {2003}
}
@misc{ncwit,
title = {{Pair Programming-in-a-Box: The Power of Collaborative Learning | National Center for Women {\&} Information Technology}},
url = {https://www.ncwit.org/resources/pair-programming-box-power-collaborative-learning},
urldate = {2021-04-23}
}
@article{Wilson2019,
abstract = {Teaching well is a craft like any other, and success often comes from an accumulation of small improvements rather than from any single large change. This paper describes 10 practices you can use when teaching programming (and other subjects). All are easy to adopt and have proven their value in institutional classrooms, intensive workshops, and other settings.},
author = {Wilson, Greg},
doi = {10.1371/journal.pcbi.1007433},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Wilson - 2019 - Ten quick tips for delivering programming lessons.pdf:pdf},
issn = {15537358},
journal = {PLoS Computational Biology},
number = {10},
pmid = {31671097},
publisher = {Public Library of Science},
title = {{Ten quick tips for delivering programming lessons}},
volume = {15},
year = {2019}
}
@article{metodos_ensenanza,
abstract = {Resumen El trabajo para nuestros alumnos es atenuado por la elecci{\'{o}}n de formas y m{\'{e}}todos de ense{\~{n}}anza, que permiten aprender seg{\'{u}}n el ritmo y las capacidades individuales de cada alumno. La finalidad de nuestro Modelo Educativo es enriquecer el proceso de educaci{\'{o}}n, mediante m{\'{e}}todos de ense{\~{n}}anza, los cuales se centran en el desarrollo de habilidades de pensamiento, a trav{\'{e}}s de estrategias que hacen del aprendizaje, una actividad creativa e interesante, aprendiendo. Palabras clave M{\'{e}}todos de ense{\~{n}}anza, estrategias de aprendizaje. 1. M{\'{E}}TODOS DE ENSE{\~{N}}ANZA Los m{\'{e}}todos de ense{\~{n}}anza son las distintas secuencias de acciones del profesor que tienden a provocar determinadas acciones y modificaciones en los educandos en funci{\'{o}}n del logro de los objetivos propuestos. Para definir el m{\'{e}}todo de ense{\~{n}}anza debemos tener presente que es: La actividad de interrelaci{\'{o}}n entre el profesor y el alumno destinada a alcanzar los objetivos del proceso de ense{\~{n}}anza-aprendizaje: Un conjunto de procedimientos del trabajo docente. • Una v{\'{i}}a mediante la cual el profesor conduce a los alumnos del desconocimiento al conocimiento. • Una forma del contenido de la ense{\~{n}}anza.},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - Unknown - M{\'{E}}TODOS DE ENSE{\~{N}}ANZA AUTOR{\'{I}}A {\'{A}}NGELA MAR{\'{I}}A VARGAS MERINA TEM{\'{A}}TICA M{\'{E}}TODOS DE ENSE{\~{N}}ANZA ETAPA EDUCACI{\'{O}}N PRIMARIA.pdf:pdf},
issn = {2922/2007},
title = {{"M{\'{E}}TODOS DE ENSE{\~{N}}ANZA" AUTOR{\'{I}}A {\'{A}}NGELA MAR{\'{I}}A VARGAS MERINA TEM{\'{A}}TICA M{\'{E}}TODOS DE ENSE{\~{N}}ANZA ETAPA EDUCACI{\'{O}}N PRIMARIA}}
}
@misc{metodos_aprendizaje,
title = {{M{\'{E}}TODOS DE APRENDIZAJE}},
url = {http://roble.pntic.mec.es/{~}mhef0009/tutoria/metodo.htm},
urldate = {2021-04-23}
}
@misc{unknown2017a,
title = {{Learning Legendario, "¿Qu{\'{e}} es el Aprendizaje justo a tiempo?"}},
url = {https://learninglegendario.com/aprendizaje-justo-a-tiempo-just-in-time-learning/.}
}
@misc{ensenanza_prog,
author = {Szpiniak, A.Ferreira and Rojo, G A},
publisher = {Nacional de R{\'{i}}o Cuarto},
title = {{Ense{\~{n}}anza de la programaci{\'{o}}n,}},
url = {http://sedici.unlp.edu.ar/bitstream/handle/10915/19182/Documento{\_}completo.pdf}
}
@misc{levasseur-a,
author = {Levasseur, A},
title = {{The Case for Videogames as Powerful Tools for Learning}}
}
@misc{block_based_programming,
annote = {9 Septiembre 2019},
author = {Weintrop, D},
title = {{Block-based Programming in Computer Science Education}},
url = {https://cacm.acm.org/magazines/2019/8/238340-block-based-programming-in-computer-science-education/abstract.}
}
@misc{gamelearn2014a,
author = {Gamelearn},
title = {{¿Qu{\'{e}} es Game-based learning?}},
url = {https://www.game-learn.com/que-es-game-based-learning/.}
}
@misc{lego_wedo_explanation,
author = {Burfoot, J},
title = {{What is LEGO WeDo?}}
}
@misc{python_history,
author = {Wolfe, J},
title = {{A brief history of Python}},
url = {https://medium.com/}
}
@misc{a-a,
author = {a. t. R. d. authors, D A},
title = {{"Getting Started with Redux," Dan Abramov and the Redux documentation authors}}
}
@misc{unity2019,
author = {{Unity Technologies}},
title = {{Unity 2019: Performance by default, high-fidelity real-time graphics, and artist tools}}
}
@misc{bitesize2019a,
author = {BBC},
title = {{Introduction to computational thinking}},
url = {https://www.bbc.co.uk/bitesize/guides/zp92mp3/revision/1.}
}
@misc{unity-a,
author = {Unity3D},
title = {{Multiplatform: Unity3D}},
url = {https://unity3d.com/unity/features/multiplatform.}
}
@misc{atlassian-a,
author = {Atlassian},
title = {{What is Git}},
url = {https://www.atlassian.com/git/tutorials/what-is-git.}
}
@article{lopez_raventos,
author = {C.},
journal = {Apertura},
number = {1},
title = {{L{\'{o}}pez Ravent{\'{o}}s, "El videojuego como herramienta educativa. Posibilidades y problem{\'{a}}ticas acerca de los serious games,"}},
volume = {8}
}
@misc{mow-a,
author = {Mow, I C},
title = {{Issues and Difficulties in Teaching Novice Computer Programming}}
}
@misc{pascal_history,
author = {Hemmendinger, D},
title = {{Pascal}},
url = {https://www.britannica.com/technology/Pascal-computer-language.}
}
@misc{university-a,
author = {University, Cornell},
title = {{Collaborative Learning,}},
url = {https://teaching.cornell.edu/teaching-resources/engaging-students/collaborative-learning.}
}
@misc{programming_games,
title = {{Mybridge, "12 Free Games to Learn Programming."}}
}
@misc{monjelat-a,
author = {Monjelat, N and Zaballos, L M and Lacasa, P},
title = {{Procesos de Resoluci{\'{o}}n de ProblemasyVideojuegos:el Caso de Sim City Creator}}
}
@misc{lego_wedo_site,
author = {L.E.G.O.},
title = {{LEGO{\textregistered} Education WeDo 2.0 Core Set by LEGO{\textregistered} Education}}
}
@misc{finley2012a,
author = {Finley, K},
title = {{What Exactly Is Github Anyway?}},
url = {https://techcrunch.com/2012/07/14/what-exactly-is-github-anyway/.}
}
@misc{gamelearn2017a,
annote = {9 Septiembre 2019},
author = {Gamelearn},
title = {{Todo lo que necesitas saber sobre los serious games y el game-based learning, explicado con ejemplos}},
url = {https://www.game-learn.com/lo-que-necesitas-saber-serious-games-game-based-learning-ejemplos/.}
}
@misc{technology-a,
author = {Technology, Nebbia},
title = {{Git Branching Strategies: which one should I pick?}},
url = {https://www.nebbiatech.com/2019/03/15/git-branching-strategies-which-one-should-i-pick/.}
}
@misc{romano-a,
author = {Romano, L and Papa, L and E.},
title = {{Saulle, "6 Awesome Cooperative Classroom Games"}}
}
@misc{starr2014a,
author = {Starr, M},
title = {{CodeCombat: Learn to code through dungeon crawling}}
}
@misc{logo_history,
author = {Foundation, Logo},
title = {{Logo History}},
url = {https://el.media.mit.edu/logo-foundation/what{\_}is{\_}logo/history.html.}
}
@article{mut2013a,
author = {Mut, Jos{\'{e}} A.Mari},
journal = {Edicionesdigitales.info},
title = {{Manual de redacci{\'{o}}n cient{\'{i}}fica.}},
url = {https://itun.es/mx/v1s3N.n},
volume = {iBooks.}
}
@misc{atlassian_agile,
annote = {6 Octubre 2019},
author = {{Atlassian Agile}},
title = {{What is kanban?}},
url = {https://www.atlassian.com/agile/kanban.}
}
@misc{wang2015a,
author = {Wang, A.Inge},
title = {{The Wear Out Effect of a Game-based Student Response System}},
url = {https://ntnuopen.ntnu.no/ntnu-xmlui/bitstream/handle/11250/2496267/Wearout{\_}effect{\_}of{\_}game{\_}based{\_}student{\_}response{\_}system.pdf}
}
@misc{node_whatis,
author = {{Node Foundation}},
title = {{About Node.js{\textregistered}}},
url = {https://nodejs.org/en/about/.}
}
@techreport{Sentance,
abstract = {With Computing becoming a mandatory subject in several countries, pedagogi-cal strategies to support young learners are needed, particularly to learn computer programming, which novice adults have struggled with for decades. As with other discipline-based education research these developments should be informed by our understanding of education and underpinned by longstanding theoretical perspectives of learning. In this paper we draw on Vygotskian ideas of mediation, tools and the zone of proximal development (ZPD) to give a theoretical lens for the learning of programming. Drawing together this sociocultural perspective and previous research in computer science education we present a strategy for teaching programming we have called PRIMM (Predict, Run, Investigate, Modify, Make). We describe our evaluation of PRIMM in 13 schools in [country] through a mixed-methods study and offer this approach as an effective model for the teaching of programming. Through our evaluation of PRIMM and engagement with classroom teachers in our research, we propose a framework for understanding the learning of programming in the classroom, and present this as an avenue for further research.},
author = {Sentance, Sue and Waite, Jane and Kallia, Maria},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Sentance, Waite, Kallia - Unknown - Teaching computer programming with PRIMM a sociocultural perspective AUTHOR PRE-PRINT.pdf:pdf},
keywords = {K-12 education,Vygotsky,computer programming,computer science education,pedagogy,sociocultural theory},
title = {{Teaching computer programming with PRIMM: a sociocultural perspective}}
}
@article{Brown2018,
author = {Brown, Neil C.C. and Wilson, Greg},
doi = {10.1371/journal.pcbi.1006023},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Brown, Wilson - 2018 - Ten quick tips for teaching programming.pdf:pdf},
issn = {15537358},
journal = {PLoS Computational Biology},
month = {apr},
number = {4},
pmid = {29621229},
publisher = {Public Library of Science},
title = {{Ten quick tips for teaching programming}},
volume = {14},
year = {2018}
}
@misc{najera2018a,
address = {CIudad Juarez},
author = {Najera, A.L{\'{o}}pez},
file = {:C$\backslash$:/Users/sauln/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Najera - Unknown - Kanban.pdf:pdf},
title = {{"Kanban"}}
}
